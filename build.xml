<project name="ant-sample" basedir="." default="build">

    <!-- ==================== -->
    <!-- Property Definitions -->
    <!-- ==================== -->
    
    <!-- Load library definitions from lib/project.properties -->
    <property name="base" location="lib"/>
    <property file="lib/project.properties"/>
    
    <!-- Project properties -->
    <property name="src.dir"     value="src"/>
    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="doc.dir"     value="doc"/>
    <property name="lib.dir"     value="lib"/>
    
    <!-- Project metadata -->
    <property name="application.title" value="ant-sample"/>
    <property name="main.class" value="piona.Main"/>
    
    <!-- Compiler settings -->
    <property name="javac.source" value="1.8"/>
    <property name="javac.target" value="1.8"/>
    <property name="source.encoding" value="UTF-8"/>
    
    <!-- ==================== -->
    <!-- Path Definitions     -->
    <!-- ==================== -->
    
    <!-- Define the compile classpath using library references -->
    <path id="compile.classpath">
        <pathelement path="${libs.commons-lang3.classpath}"/>
        <pathelement path="${libs.gson.classpath}"/>
    </path>
    
    <!-- Define the runtime classpath -->
    <path id="run.classpath">
        <pathelement location="${classes.dir}"/>
        <path refid="compile.classpath"/>
    </path>

    <!-- ==================== -->
    <!-- Build Targets        -->
    <!-- ==================== -->
    
    <target name="init" description="initialize build environment">
        <echo message="Building ${application.title}"/>
        <echo message="Java version: ${ant.java.version}"/>
        <echo message="Source level: ${javac.source}"/>
        <echo message="Target level: ${javac.target}"/>
        <echo message=""/>
        <echo message="Dependencies:"/>
        <echo message="  - commons-lang3: ${libs.commons-lang3.classpath}"/>
        <echo message="  - gson: ${libs.gson.classpath}"/>
    </target>
    
    <target name="compile" depends="init" description="compile project">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" 
               destdir="${classes.dir}" 
               includeantruntime="false"
               source="${javac.source}"
               target="${javac.target}"
               encoding="${source.encoding}">
            <classpath refid="compile.classpath"/>
        </javac>
        <echo message="Compilation complete"/>
    </target>

    <target name="jar" depends="compile" description="generate the distribution jar with dependencies">
        <mkdir dir="${jar.dir}"/>
        
        <!-- Create JAR with manifest -->
        <jar destfile="${jar.dir}/${application.title}.jar" 
             basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
                <attribute name="Class-Path" value="commons-lang3-3.12.0.jar gson-2.10.1.jar"/>
            </manifest>
        </jar>
        
        <!-- Copy dependency JARs to the distribution directory -->
        <copy todir="${jar.dir}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <exclude name="project.properties"/>
            </fileset>
        </copy>
        
        <echo message="JAR created: ${jar.dir}/${application.title}.jar"/>
        <echo message="Dependencies copied to: ${jar.dir}/"/>
    </target>

    <target name="run" depends="jar" description="run application">
        <java classname="${main.class}" fork="true">
            <classpath>
                <path refid="run.classpath"/>
            </classpath>
        </java>
    </target>
    
    <target name="run-jar" depends="jar" description="run application from JAR">
        <java jar="${jar.dir}/${application.title}.jar" fork="true">
            <classpath>
                <pathelement location="${jar.dir}/${application.title}.jar"/>
                <fileset dir="${jar.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="build" depends="jar" description="build application"/>

    <target name="doc" description="generate documentation">
        <mkdir dir="${doc.dir}" />
        <javadoc destdir="${doc.dir}" sourcepath="${src.dir}"/>
    </target>

    <target name="clean" description="clean up build files">
        <delete dir="${build.dir}"/>
        <delete dir="${doc.dir}" />
    </target>

    <target name="rebuild" depends="clean,build" description="rebuild application"/>

</project>
